<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【破解】记录一次破解某CSGO外Gua的过程</title>
      <link href="/posts/crack-eydata/"/>
      <url>/posts/crack-eydata/</url>
      
        <content type="html"><![CDATA[<p>考完试了，可以稍微轻松一点了，不如和舍友来一把CS:GO，打不过怎么办呢？试试“科技”？<br>博主知道国内某宝上卖的几块钱的外Gua都是国外的免费外Gua和破解的国外的收费外Gua，然后套一个网络验证的壳<br>对于这些卖挂的人来说，套用一下现有的网络验证，开个淘宝店建个QQ群就可以卖卡号了，几乎零成本。<br><a id="more"></a></p><p>既然是零成本，那么只要有人买就能赚钱，至于是否被破解，他们才不关心呢，反正他们本身也是破解别人的。</p><p><img src="/images/posts/crack-eydata/login_ui.png" alt="登录器界面"></p><p>外Gua分为两部分：</p><ul><li>登录器（一般也集成注入器的功能）</li><li>外Gua的核心部分（一般是DLL文件）</li></ul><p>所以，想要免费使用外Gua的话，思路也就是两种</p><ul><li>破解登录器</li><li>提取核心DLL文件</li></ul><hr><p><strong>破解登录器</strong></p><p>这是我选择的方式，为什么选择对登录器下手呢？</p><ul><li>登录器集成了注入器的功能，不用自己单独写一个注入器去注入DLL文件</li><li>外Gua核心文件会随着游戏版本升级进行更新，提取核心文件说不定哪天就失效了</li><li>相对于核心文件来说，登录器几乎是一成不变的，套用现有的网络验证demo，集成一个注入器就完事了</li></ul><p>那么，破解登录器的思路又可以分成两种：</p><ul><li>直接本地破解登录器</li><li>冒充验证服务器（或者中间人攻击）</li></ul><p>如果直接破解登录器，每发布一个版本都要重新破解，应该能找到通用的破解方法，但是依旧比冒充服务器麻烦。</p><p>如果是冒充服务器，那就会简单很多，因为不需要对客户端/登录器做手脚，只需要把验证请求重定向到我们自己的验证服务器就好了。</p><p>根据我的了解，网络上有非常多的网络验证，大多数分为两个版本：免费版 和 收费版</p><p>免费版本只有基础功能，防破解功能较弱；收费版本会在免费版本的基础上增加一些高级功能和一些防破解的功能。</p><p>前文说过，淘宝上卖的便宜的外Gua其实都是对国外的免费外Gua或者破解的收费外Gua加了一个壳，本身没啥成本，能卖就能赚钱，而且绝大多数玩家是不具备破解能力的，所以他们没有必要使用收费版本的网络验证。</p><hr><p>前面啰嗦了那么多，下面是分析和破解过程。</p><p>首先打开Wireshark进行抓包，然后在外Gua登录器中随便输入一个无效卡号，观察一下认证过程。</p><p><img src="/images/posts/crack-eydata/pcapng_1.png" alt="无效卡号的认证过程"></p><p>可以看到一共有三个POST请求，第一个不带参数，是一个获取公告的请求，返回信息是明文，不放图了。</p><p>第二次POST请求传递了两个参数，<code>StatusCode</code>和<code>UserName</code>，第一个参数具体意义不明，也没深入研究，因为不影响，第二个参数就是我们输入的无效的卡号。</p><p>返回信息为<code>-114</code>，一看就能知道是一个错误代号，具体是什么意思呢？我们去该网络验证的官网上下载一个demo看一下就好了。<code>-114</code>代表<code>登录数据不存在</code>，实际上有效卡返回的也是<code>-114</code>，所以可以推断，这个接口并没有实际使用，后面还有其他验证。</p><p>第三个POST请求有三个参数<code>SingleCode</code>、<code>Ver</code>和<code>Mac</code>，含义分别是<code>单码</code>、<code>版本</code>和<code>网卡MAC地址</code>，该网络验证官网提供的demo中有一个单码模版，所以可以确定卖家套用的就是这套单码模版。</p><p>返回信息为<code>-410</code>，含义是<code>单码卡密过期</code>。</p><p>然后我们去买一个小时卡，然后对有效卡号的认证过程进行抓包。</p><p><img src="/images/posts/crack-eydata/pcapng_2.jpg" alt="有效卡号的认证过程"></p><p>可以看到一共有7个POST请求，其实应该是8个，获取版本号的请求没抓到包，不重要，所以没重新抓包。</p><p>通过URL<code>94681f4d41a15484</code>我们可以看到，有效卡号认证过程中第一个请求其实就是无效卡号认证过程的第二个POST请求，返回请求依旧是<code>-114</code>，登录器没有弹出<code>登录数据不存在</code>的提示，所以可以确定这个登录器直接忽略了这个请求的返回结果。</p><p><code>b5f57e27b5b4a7fa</code>这个请求的参数依旧是<code>SingleCode</code>、<code>Ver</code>和<code>Mac</code>，因为是有效卡号，所以这次返回了一串十六进制字符串，意义不明，经过多次测试，返回值不变，所以我们待会原样返回即可。</p><p><code>2c124d6192c12fa7</code>这个请求传递了一个参数<code>UserName</code>，值为卡号，返回信息是一个类似<code>2019-01-10 19:25:46</code>格式的时间，一眼就能看出这个是到期时间，所以这里是我们要重点关注的，待会返回请求的时候返回一个足够长的时间就好了，比如我说干脆改成了2020年到期。</p><p>剩下的POST请求没什么好说的，中间的是读去预存在认证服务器上的<code>关键数据</code>，最后一个是获取最新版本号。短期时间内不会变化，服务器原样返回即可。</p><hr><p>稍微总结一下，经过简单分析，我发现请求和响应信息全部都是HTTP明文信息，虽然有返回一些十六进制字符串，因为短期内不会有什么变化，所以可以认为是固定值。</p><p>除了获取公告信息之外所有POST请求都需要传递卡号进行验证，这是服务器对客户端的验证，但是客户端没有对服务器返回的信息进行验证，也就是说认证过程是单向的，我们冒充一下验证服务器，把该返回的信息都返回给客户端就能成功欺骗客户端。</p><p>在服务器返回到期时间以后，客户端还发了几个POST请求，上文中我说是请求一些<code>关键数据</code>，这些数据可以是外Gua要修改的内存地址，或者修改后的数值等信息，作用是防止客户端被破解，因为单纯破解客户端绕过验证是没用的，最关键内存地址信息存储在服务器上，不经过认证，客户端就没法修改游戏的内存。</p><p>但是这次分析的这个外Gua，最核心的部分并不是卖家自己的，所以他没法干预，他只能对登录器做一下限制，上文提到过登录器集成注入器，他请求的<code>关键数据</code>应该就是将核心DLL文件注入到游戏进程时所需要的一些信息，为什么这么说呢，因为我看到了返回的信息中有<code>csgo.exe</code>，这也能算作关键信息，233。</p><hr><p>下面说如何冒充验证服务器。</p><p>按照认证流程，返回上文提到的那些信息就好了。</p><p>index.php</p><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>$msg = <span class="hljs-string">'程序公告1Crecker: 126g\r\nCrecker: 126g\r\nCrecker: 126g\r\nCrecker: 126g\r\nCrecker: 126g\r\n'</span>;<br>$path = $_GET[<span class="hljs-string">'path'</span>];<br><br><span class="hljs-keyword">switch</span> ($path) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">'/8e4f8d2bcd158e4d'</span>: &#123;<br><span class="hljs-keyword">echo</span> $msg;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/94681f4d41a15484'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'-114'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/b5f57e27b5b4a7fa'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'77D1F21F3983134E87677ACF9F7342F9'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/2c124d6192c12fa7'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'2020-01-10 19:25:46'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/b66b4a2bec2d9678'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'csgo.exe'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/7db615f0d96d9654'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'46222725514754514722512122242222472225222822272521222557252222235C222522222525222522212223252225212224222856235155235354552491775DE4A'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/b66b4a2bec2d9678'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'445906'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">'/0b94a3745f9131c8'</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'6.1'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">default</span>: &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">'Welcome'</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后本地搭建nginx+php环境，在nginx配置文件中添加下面的URL重写规则</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">rewrite (.*) /index.php?path=$1 last;<br></code></pre></td></tr></table></figure><p>最后修改本地host文件，把验证服务器的域名解析到<code>127.0.0.1</code>就好了，验证服务器有好几台，任意解析一台就好。</p><p>验证服务器地址嘛，抓过包肯定就知道了。</p><hr><p>第一次记录破解过程，过程不复杂，但是啰啰嗦嗦写了很多。</p>]]></content>
      
      
      <categories>
          
          <category> Security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSGO </tag>
            
            <tag> Crack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo小技巧】首页只显示文章摘要信息</title>
      <link href="/posts/hexo-abstract/"/>
      <url>/posts/hexo-abstract/</url>
      
        <content type="html"><![CDATA[<p>默认情况下首页上会显示文章的全部内容</p><p>想要只显示摘要内容至于要添加一个标签</p><a id="more"></a><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">这里写文章摘要<br><br>&lt;!-- more --&gt;<br><br>这里写文章的详细内容<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo小技巧】deploy之后自动删除CNAME文件的问题</title>
      <link href="/posts/hexo-cname/"/>
      <url>/posts/hexo-cname/</url>
      
        <content type="html"><![CDATA[<p>刚刚发布完了文章之后我发现没法使用自定义域名访问了</p><p>在github中设置了Custom domain后会多出一个CNAME文件</p><p>CNAME文件的内容就是自定义域名</p><p>每次<code>hexo deploy</code>以后CNAME文件都会被清除</p><p>解决方法很简，在hexo的source目录下创建一个CNAME文件，内容是自己的域名就好了</p><a id="more"></a><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs undefined">source/<br>├── CNAME【就是这个文件】<br>├── _posts<br>│   └── ……<br>├── about<br>│   └── index.md<br>├── categories<br>│   └── index.md<br>├── favicons<br>│   ├── android-chrome-192x192.png<br>│   ├── android-chrome-512x512.png<br>│   ├── apple-touch-icon.png<br>│   ├── browserconfig.xml<br>│   ├── favicon-16x16.png<br>│   ├── favicon-32x32.png<br>│   ├── favicon.ico<br>│   ├── mstile-150x150.png<br>│   ├── safari-pinned-tab.svg<br>│   └── site.webmanifest<br>├── images<br>│   └── avatar.png<br>└── tags<br>    └── index.md<br></code></pre></td></tr></table></figure><p>内容</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">blog.126g.cn<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法备忘</title>
      <link href="/posts/markdown/"/>
      <url>/posts/markdown/</url>
      
        <content type="html"><![CDATA[<p>Hexo的文章、Github的README文件都要用markdown来写，简记一下Markdown的语法，备忘。</p><p>主要内容：标题 列表 引用 粗体 斜体 链接 图片 表格<br><a id="more"></a></p><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">- 列表项1<br>- 列表项2<br>- 列表项2-1<br>- 列表项2-2<br>- 列表项3<br>- 列表项4<br></code></pre></td></tr></table></figure><blockquote></blockquote><ul><li>列表项1</li><li>列表项2<ul><li>列表项2-1</li><li>列表项2-2</li></ul></li><li>列表项3</li><li>列表项4</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">1. 列表项1<br>2. 列表项2<br>1. 列表项2-1<br>2. 列表项2-2<br>3. 列表项3<br>4. 列表项4<br></code></pre></td></tr></table></figure><ol><li>列表项1</li><li>列表项2<ol><li>列表项2-1</li><li>列表项2-2</li></ol></li><li>列表项3</li><li>列表项4</li></ol><h3 id="TO-do-List"><a href="#TO-do-List" class="headerlink" title="TO-do List"></a>TO-do List</h3><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">- [x] 已完成1<br>- [x] 已完成2<br>- [ ] 待完成<br>- [ ] 待完成<br></code></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> 已完成1</li><li style="list-style: none"><input type="checkbox" checked> 已完成2</li><li style="list-style: none"><input type="checkbox"> 待完成<ul><li style="list-style: none"><input type="checkbox"> 待完成</li></ul></li></ul><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">&gt; Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br></code></pre></td></tr></table></figure><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">|标题1 |标题2 | 标题3 |<br>|--:--|--:-- |--:-- |<br>|Cell1|Cell2 |Cell3 |<br>|Cell4|Cell5 |Cell6 |<br>|Cell7|Cell8 |Cell9 |<br></code></pre></td></tr></table></figure><table><thead><tr><th>标题1</th><th style="text-align:left">标题2</th><th style="text-align:right">标题3</th></tr></thead><tbody><tr><td>Cell1</td><td style="text-align:left">Cell2</td><td style="text-align:right">Cell3</td></tr><tr><td>Cell4</td><td style="text-align:left">Cell5</td><td style="text-align:right">Cell6</td></tr><tr><td>Cell7</td><td style="text-align:left">Cell8</td><td style="text-align:right">Cell9</td></tr></tbody></table><hr><h2 id="粗体、斜体、分割线"><a href="#粗体、斜体、分割线" class="headerlink" title="粗体、斜体、分割线"></a>粗体、斜体、分割线</h2><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs undefined">*这是粗体*<br><br>**这是斜体**<br><br>***这是粗斜体***<br><br>三个星号是分割线<br>***<br></code></pre></td></tr></table></figure><p><em>这是粗体</em></p><p><strong>这是斜体</strong></p><p><strong><em>这是粗斜体</em></strong><br>Å<br>三个星号是分割线</p><hr><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><div style="width: 300px;"><br><img src="/images/posts/markdown/highlighting.png" alt="代码高亮"><br></div><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">#include &lt;stdio.h&gt;<br>int main() &#123;<br>printf(&quot;Hello World!\n&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="链接、图片"><a href="#链接、图片" class="headerlink" title="链接、图片"></a>链接、图片</h2><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">链接<br><br>[【简明版】有道云笔记Markdown指南](http://note.youdao.com/iyoudao/?p=2411)<br><br>图片<br><br>![头像](/images/avatar.png)<br></code></pre></td></tr></table></figure><p><a href="http://note.youdao.com/iyoudao/?p=2411" target="_blank" rel="noopener">【简明版】有道云笔记Markdown指南</a></p><div style="width: 200px;"><br><img src="/images/avatar.png" alt="头像"><br></div>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h2><ul><li>姓名：9e096e255bdffa30d920a7071ce4d030</li><li>邮箱：<a href="mailto:mushuang2015@gmail.com" target="_blank" rel="noopener">mushuang2015@gmail.com</a></li><li>Q Q：24fa525</li></ul><hr><ul><li>山东省某大学网络工程专业在校生</li><li>ACM逃兵</li><li>CTF菜鸟</li><li>正在学习写bug的程序猿</li></ul>]]></content>
      
    </entry>
    
    
  
</search>
